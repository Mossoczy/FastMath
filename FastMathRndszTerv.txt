Cél, hogy minél részletesebben meghatározzuk mit szeretnénk látni a projekt végén és ezt le is kell írni. 
Nyílván nem feltétlenül lehet minden egyes részét maximális részletekbe menően definiálni, de erre törekszünk. 
Minél jobban meg tudjuk határozni mit szeretnék, annál inkább tudjuk csökkenteni a 
projekt rizikófaktorait az adott szabályok és igények határain belül.

Konceptuális: 1. 2. 6.
Nagyvonalú: 1. 2. 3. 4. 6.
Részletes: 1. 2. 3. 4. 5. 6. (adott időintervallum megadása, ezt a trello-ban megadtuk mindegyiknek, hogy minek mi a határideje)

1. Bevezetés
Mai rohanó világunkban a közösségi média megpecsételi fiatal tanulóink életét.
Iskolánk vezetősége ezért állt elő azzal a brilliáns ötlettel, hogy készítsünk a napközis tanulók számára oktató
jellegű játékokat. Mint tudjuk, matematikát csak egy módon tudja elsajátítani az pedig a gyakorlás. 
Az általunk készített játékkal ezt meg tudjuk valósítani mellyel különböző matematikai 
műveleteket tudunk gyakorolni. Ha a felhasználó úgy érzi elsajátította a kellő tudást 
akkor akár egyel nehezebb szintre is léphet.
Célunk az, hogy a diákok a saját tudásuk alapján dolgozzanak, ezért minden feladat véletlenszerű.

2. Projekt terv
A rendszer létrehozásához rendelkezésre álló erőforrások: A felhasználó által
használt notebookok/asztali számítógépek melyeknek rendelkezniük kell egy futó
opercációs rendszerrel(Windows 7, Windows 10, Linux)

Betenbuk Viktor: Fő oldal, a program fejlesztése és dizájn.
Mossóczy Kristóf: A program fejlesztése és dizájn.
Czafik Milán: A program fejlesztése és dizájn.

Mérföldkövek:
I.    Feladatok kiosztása megegyezés és tudás szerint.
II.   Dokumentációk, leírások képernyő tervek véglegesítése.
III.  Git repo folyamatos frissítése amikor akármi elkészül.
IV.   Folyamatos kapcsolattartás a projektben résztvevőkkel.
V.    Tesztelési folyamatok befejezése.
VI.   Felkészülés a projekt bemutatására.
VII.  Bemutatás.

3. Funkcionális leírás
A program funkcionális leírása:
Futtatás után egy kezelőfelület jelenik meg, ahol 3 menüpont fogad. Egy indítás menüpont, egy eredmények
menüpont, ahol az eddigi eredményeink nézhetőek meg, illetve egy kilépés menüpont. Az indításra kattintva
felugrik egy ablak, ahol el kell döntenie a felhasználónak, hogy mit szeretne gyakorloni
(összeadás, kivonás, szorzás, osztás), valamint milyen nehézséggel szeretné azt megtenni(könnyű, közepes, nehéz, vegyes).
Miután a felhasználó eldöntötte, mit szeretne gyakorolni, egy másik ablak jelenik meg, rajta két számmal, egy
műveletjellel, egy számlálóval(mely a hátralévő időt mutatja) és 10 feladattal.
Ezen kívül a helyes/helytelen megoldások számai is fel van tűntetve.
Ha az összes feladatot befejeztük, megkapjuk a helyes feladatokért kapott pontszámokat
és el tudjuk menteni az eredményünket egy a felhasználó által begépelt névvel.

4. Fizikai Követelmény
Futtatás módja:
	-Minden számítógépen lokálisan fut majd
Futtató környezet:
	-A felhasználó által használt számítógép operációs rendszere
Elérhető operációs rendszerek:
	-Windows 7
	-Windows 8
	-Windows 8.1
	-Windows 10
Szoftver moduljai:
	-A szoftvert két Windows Form Application tesz össze
Fejlesztői környezet:
	-Visual Studio C#

5. Teszt terv
	 Leírja a teszt típusát, a metodológiáját és a riport készítés módszerét. 
	 Emellett meghatározza a teszt elvárásokat, a teszt-esetek elvárt eredményeit, 
	 sikerességének kritériumait, a kockázatok kezelését és a hatáskörön kívül eseteket.
	-Fejlesztői teszt
	 A fejlesztői tesztelés célja a rendszer alapvető funkcióinak ellenőrzése, a hiba
	 kezelés és az alapvető funkciók működésének vizsgálata.
	-Prototípus teszt
	 A prototípus tesztelés célja a rendszer már működő moduljainak önálló tesztelése, 
	 a modulon belüli hibák azonosításának és kiküszöbölésének érdekében.
	-Integrációs teszt
	 Az integrációs teszt célja a rendszer más rendszerekhez történő illesztésének vizsgálata, 
	 a több rendszereken keresztül átívelő funkciók tesztelésének érdekében.Az adatmigrációs 
	 tesztelés az integrációs teszteléshez tartozik, ennek lényege, hogy a bevezetendő rendszerbe 
	 áttöltik azokat az adatokat, amelyekkel a rendszer dolgozni fog és letesztelik a betöltött adatok, 
	 illetve az adatokat kezelő funkciók helyességét.
	-Elfogadási teszt
	 Az elfogadási teszt (angolul User Acceptance Test) célja a rendszer teljes funkcionalitásának 
	 vizsgálata a felhasználók szemszögéből.
	-Terheléses teszt
	 A terheléses teszt célja a tervezett kapacitások, valamint a rendelkezésre álló növekedési potenciál meghatározása.
	-Biztonsági teszt
	 Biztonsági tesztelésre akkor van szükség, ha a rendszer szenzitív (pl. személyes vagy pénzügyi) adatokat kezel, 
	 vagy szabadon elérhető az internetről.
	-Go live teszt
	 A go-live teszt egy próbaélesítés, melynek során a korábbi rendszerek továbbra is üzemelnek annak érdekében, 
	 hogy az élesítéskor keletkező problémák ne befolyásolják a normál üzemi működést.
	-Megbízhatósági teszt
	 A megbízhatósági teszt célja, hogy a rendszerrel elvégezhető feladatokról - lehetőleg mindről -
	 megmutassa, hogy hosszú időn át képesek determinisztikusan és konzisztensen működni adott
	 környezetben. Más aspektusból – alacsonyabb tesztszinten – azt várjuk el egy-egy művelettől, hogy
 	 ugyanazt az eredményt kapjuk, ha újra és újra végrehajtjuk adott körülmények között.
	-Hordozhatósagi teszt
	 A hordozhatósági teszt célja a különböző platformokon működő képes használat(Windows operáiós rendzserek, Linux, Android, IOS)
	-Megfelelési teszt
	 A szerződésekben foglaltakat vizsgálja, hogy a projekt minden része megfelel e a szerződött fél kritériumaival.

6. Specifikáció
	A specifikáció (software specification) célja a feladatot megoldó szoftver funkcióinak tisztázása, a rendszerre és a fejlesztésre
	vonatkozó elvárások megadása feltérképezi a követelményeket felhasználói, valamint fejlesztői szemszögből, lépései:
	megvalósíthatósági elemzés
	követelmény megállapítás és elemzés
	követelmény specifikáció
	eredménye a szoftver követelmény-leírása 
	Egy rendszer funkcionális követelményei leírják, hogy a rendszernek milyen funkciókkal kell rendelkezni, hogyan kellene működnie 
	-Nemfunkcionális követelmények
	megbízhatóság, válaszidő, tárfoglalás, rugalmasság, robosztusság, hordozhatóság
